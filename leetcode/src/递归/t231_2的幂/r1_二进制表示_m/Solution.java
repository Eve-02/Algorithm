package 递归.t231_2的幂.r1_二进制表示_m;

public class Solution {

    /**
     * 一个数 n 是 2 的幂，当且仅当 n 是正整数，并且 n 的二进制表示中仅包含 1 个 1。
     * 将 n 二进制表示的最低位 1 移除:(2的多少次方都是正数)
     *   方法1: n & (n - 1) = 0 ->[(a10...0)与 (a01...1)，高位 a 不变，a 之后全部置为 0]
     *   方法2: n & (-n) = n
     *
     *   时间复杂度: O(1).
     */
    // 【执行用时：0ms, 在所有 Java 提交中击败了 100.00% 的用户】
    public boolean isPowerOfTwo(int n) {
        // 方法1
        return n > 0 && (n & (n - 1)) == 0;
        // 方法2
//        return n > 0 && (n & -n) == n;
    }



}